@{
    @using GestionCinema.Models;
    ViewData["Title"] = "Place Film";
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

<div class="info d-flex justify-content-center mb-4">
    <div class="col-3 mb-1 p-3 text-center border" style="background-color: lightblue;">
        <strong>Reservation non payer</strong>
    </div>
    <div class="col-3 mb-1 p-3 text-center border" style="background-color: lightgreen;">
        <strong>Reserver</strong>
    </div>
    <div class="col-3 mb-1 p-3 text-center border" style="background-color: blue;">
        <strong>Disponible</strong>
    </div>
</div>

<script>
    function updateReservationStatus(reservationId)
    {
        fetch('/Diffusion/UpdateReservationStatus', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ idReservation: reservationId }) // Send the reservation ID in the request body
        })
        .then(response => response.json()) // Convert the response to JSON
        .then(data => {
            // Display success or error message based on the response
            if (data.success) {
                alert(data.message); // Show success message
                location.reload(); // Reload the page to reflect the changes
            } else {
                alert('Error: ' + data.message); // Show error message
            }
        })
        .catch(error => {
            console.error('Error updating reservation status:', error);
            alert('An error occurred while updating the reservation status.');
        });
    }
</script>


<div class="container text-center mt-4">
    <h2>Places Disponibles pour la Salle @ViewBag.salleId</h2>

    @foreach (var columnGroup in ((List<PlacesDispo>)ViewBag.Places).GroupBy(p => p.NomColonne))
    {
        <h3>@columnGroup.Key</h3>

        // Calcul du nombre de places par ligne, avec arrondi
        var placesParLigne = (int)Math.Ceiling((double)columnGroup.First().NbPlaces / columnGroup.First().NbLignes);
        
        // Calcul du nombre de lignes nécessaire (en arrondissant si besoin)
        var nbLignes = (int)Math.Ceiling((double)columnGroup.First().NbPlaces / placesParLigne);

        for (int i = 1; i <= nbLignes; i++)
        {
            // Déclaration des places pour la ligne i
            var placesDeLaLigne = columnGroup.Where(p => (columnGroup.ToList().IndexOf(p) / placesParLigne) + 1 == i).ToList();
            
            <div class="row mb-2">
                <div class="col-12" style="text-align: center;">
                    <p>Ligne @i</p>

                    <!-- Flexbox pour afficher les places de manière horizontale -->
                    <div class="d-flex flex-wrap justify-content-center">
                        @foreach (var place in placesDeLaLigne)
                        {
                            // Recherche de la réservation correspondante à la place
                            var reservation = ((List<Reservation>)ViewBag.PlacesFilm)
                                .FirstOrDefault(res => res.PlaceId == place.NumPlace);

                            // Si la place est réservée, on vérifie son état
                            if (reservation != null)
                            {
                                if (reservation.EtatPlace == 1)
                                {
                                    // Place réservée, état "1" (disponible), fond vert clair
                                    <div class="col-2 mb-1" id="place_@place.NumPlace" style="border: 1px solid; background-color: lightgreen; padding: 10px; margin-right: 5px; text-align: center;">
                                        <strong>@place.NumPlace</strong>
                                    </div>
                                }
                                else
                                {
                                    // Place réservée, état "2" (reserver mais non payer), fond bleu ciel
                                    <div class="col-2 mb-1" id="place_@place.NumPlace" style="border: 1px solid; background-color: lightblue; padding: 10px; margin-right: 5px; text-align: center;">
                                        <strong>@place.NumPlace</strong>
                                        <strong>@reservation.DateReservation</strong>
                                    </div>
                                    <script>
                                        var reservationTime = new Date("@reservation.DateReservation");
                                        var currentTime = new Date();
                                        var timeDifferenceInHours = (currentTime - reservationTime) / 1000 / 60 / 60; // Difference in hours

                                        if (timeDifferenceInHours >= 1) { // Check if the time difference is greater than or equal to 1 hour
                                            // Update reservation status after 1 hour
                                            var reservationId = "@reservation.IdReservation";
                                            if (reservationId) {
                                                updateReservationStatus(reservationId);
                                            }
                                        }
                                    </script>

                                }
                            }
                            else
                            {
                                // Place non réservée, fond doré
                                <div class="col-2 mb-1" id="place_@place.NumPlace" style="border: 1px solid; background-color: blue; padding: 10px; margin-right: 5px; text-align: center;">
                                    <strong>@place.NumPlace</strong>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>
